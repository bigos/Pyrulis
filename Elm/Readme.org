* Readme

Here are some of my Elm projects and links to Elm resources

** Elm resources
https://korban.net/elm/

https://www.manning.com/books/elm-in-action/

https://elmcraft.org/learn

** interesting packages

*** elm-ui
https://dark.elm.dmy.fr/packages/mdgriffith/elm-ui/latest/

*** elm-review
https://dark.elm.dmy.fr/packages/jfmengels/elm-review-simplify/latest/

#+begin_example
  npx elm-review --template jfmengels/elm-review-unused/example
  npx elm-review --template jfmengels/elm-review-simplify/example
#+end_example

** fixing CORS XHR error on the API side
https://stackoverflow.com/questions/35318324/render-json-with-header

#+begin_src ruby
# in your API controller action do something like:
response.headers['Access-Control-Allow-Origin'] = '*'
render json: { status: :ok, example_result: 123 }, status: 200
#+end_src

** possible solution for pages with Turbo

#+begin_src haml
  = javascript_include_tag 'plugins/home', "data-turbo-eval": "false"
  - flag_data = {a: 1, be: 'two'}
  :javascript
#+end_src

#+begin_src javascript
  function loadElm() {
      var enode = document.getElementById("elm")
      if (enode) {
          Elm.Main.init({
              flags: #{JSON.generate flag_data},
              node: enode
          });
      } else {
          // alert("no enode for Elm yet");
      }
  }

  document.addEventListener('turbo:load', loadElm)
  document.addEventListener('turbo:before-render', loadElm)
#+end_src

** install npm

https://github.com/nvm-sh/nvm#install--update-script

#+begin_example
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
#+end_example

** install yarn
#+begin_example
npm install -g yarn
#+end_example

** weird type fix
I had a problem where Http.get would not compile complaining on the wrong
returned type despite everything being correct.

This was the fix
#+begin_example
 npx elm-json upgrade --unsafe
#+end_example
