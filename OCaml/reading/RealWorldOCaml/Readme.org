* Real World OCaml

https://dev.realworldocaml.org/toc.html

this is the next book I am going to read

** A Guided Tour

*** Base and Core
#+begin_example
M-x tuareg-switch-to-repl
#+end_example

*** Functions and Type Inference

**** annotated and not annotated function
#+begin_src ocaml
    (* no annotations *)
  let sum_if_true test first second =
    (if test first then first else 0)
    + (if test second then second else 0);;

    (* annotated *)
  let sum_if_true (test : int -> bool) (x : int) (y : int) : int =
  (if test x then x else 0)
  + (if test y then y else 0);;
#+end_src

*** Tuples, Lists, Options, and Pattern Matching

**** Tuples

For the mathematically inclined, * is used in the type t * s because that type
corresponds to the set of all pairs containing one value of type t and one of
type s. In other words, itâ€™s the Cartesian product of the two types, which is
why we use *, the symbol for product.

destructuring tuples

***** Operators in Base and the StdLib
inconsistency about the ~**~

In Base it is used for integer expotentiation while in Stdlib it is used for
float expotentiation.

**** Lists

** next reading



https://dev.realworldocaml.org/guided-tour.html#lists
