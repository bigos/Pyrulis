* Clojure syntax compared to Common Lisp
** Links
http://hyperpolyglot.org/lisp
https://www.cis.upenn.edu/~matuszek/Concise%20Guides/Concise%20Clojure.html

*** other links
http://www.lispcast.com/ultimate-guide-to-learning-clojure-for-free
https://clojure.org/api/cheatsheet
https://github.com/clojure-cookbook/clojure-cookbook
http://www.fullstackclojure.com/best-clojure-resources.html


** Brackets
http://softwareengineering.stackexchange.com/questions/195090/are-square-brackets-and-curly-braces-in-clojure-still-s-expressions
Different bracket shapes are a syntax sugar. But the convention is to use:


|----------------+----------------------+----------------------|
| kind           | literal              | dynamic              |
|----------------+----------------------+----------------------|
| string         | "string"             | (string 'string)     |
| list           | '(1 2 3)             | (list 1 2 3)         |
| vector         | [1 2 3]              | (vec '(1 2 3))       |
| set            | #{1 2 3}             | (set '(1 2 3))       |
| map            | {:a 1 :b 2}          | (hash-map :a 1 :b 2) |
| function => 10 | ((fn [n] (* 5 n)) 2) | (#(* 5 %1) 2)        |
|----------------+----------------------+----------------------|
