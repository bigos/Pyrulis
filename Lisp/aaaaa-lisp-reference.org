* AAAAA Lisp Reference

Interesting Lisp reference

https://git.savannah.gnu.org/cgit/gcl.git/tree/gcl/info

https://gitlab.common-lisp.net/clpm/clpm
https://gitlab.common-lisp.net/clpm/clpm/-/blob/main/tutorial/tutorial.org


style guides

https://github.com/foxsae/The-One-True-Lisp-Style-Guide

http://labs.ariel-networks.com/cl-style-guide.html

https://www.google.com/search?q=Common+Lisp+Style+Guide

discussion about prepending functions with %
https://www.reddit.com/r/Common_Lisp/comments/jgj9lu/naming_conventions/

And some programmers will name particularly low-level functions with names that start with % or even %%.
https://gigamonkeys.com/book/syntax-and-semantics

http://www.mohamedelafrit.com/education/ENSEIRB/lisp/standards.pdf

https://ccrma.stanford.edu/CCRMA/Courses/AlgoComp/cm/doc/contrib/lispstyle.html

https://lisp-lang.org/style-guide/

https://www.cliki.net/naming+conventions

project generation

https://github.com/fukamachi/cl-project

project organisation
https://softwareengineering.stackexchange.com/questions/314898/in-which-order-should-lisp-functions-be-defined/314918#314918

packages

https://www-fourier.ujf-grenoble.fr/~sergerar/Papers/Packaging.pdf

https://stackoverflow.com/questions/74809637/common-lisp-best-practices-for-splitting-code-between-files

https://flownet.com/ron/packages.pdf

MOP

https://clos-mop.hexstreamsoft.com/

https://lispcookbook.github.io/cl-cookbook/clos.html

[[file:Closer/Readme.org::*Closer][Closer]] and [[file:clos.org::*CLOS][CLOS]]

https://stevelosh.com/blog/2022/08/depending-in-common-lisp/

https://www.reddit.com/r/Common_Lisp/comments/kljyg1/need_advice_on_how_to_handle_metaclass_option/

https://stackoverflow.com/questions/53694551/common-lisp-multiple-metaclasses

CLOS-MOP 5 & 6 table of content
http://metamodular.com/CLOS-MOP/table-of-contents.html

lisp cookbook MOP
https://lispcookbook.github.io/cl-cookbook/clos.html#mop

unintern to change metaclass
https://stackoverflow.com/questions/38811931/how-to-change-classs-metaclass#38812140

validate-superclass here again
https://lispcookbook.github.io/cl-cookbook/clos.html#metaclasses

validations
https://lispcookbook.github.io/cl-cookbook/clos.html#controlling-the-initialization-of-instances-initialize-instance

community spec
https://cl-community-spec.github.io/pages/Objects.html

https://dept-info.labri.fr/~strandh/Teaching/MTP/Common/David-Lamkins/chapter07.html

using quicklisp
#+begin_example
# all systems available via quicklisp
(ql:system-list )
# find system that was not installed
(ql:where-is-system "zyre")
# find installed system
(ql:where-is-system "cl-gobject-introspection")
# removing
(quicklisp-client:uninstall  "cl-gtk4")
#+end_example

blogs
https://turtleware.eu/tag/mop.html

https://turtleware.eu/1.html
