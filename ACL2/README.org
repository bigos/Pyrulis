* Starting in Emacs
** M-x load-acl2
** in the terminal run
*** ~/Documents/acl2-7.2/saved_acl2
** M-x commands
 M-x rainbow-delimiters-mode
 M-x paredit-mode
** And you will have some resemblance of REPL
* using The Little Prover
** git repo
https://github.com/the-little-prover/j-bob

** to load a script
(ld "~/Programming/j-bob/acl2/j-bob-lang.lisp")

** to load my example code
(ld "~/Programming/Pyrulis/ACL2/first-definitions.lisp")

** more
;; Load the J-Bob language:
(ld "~/Programming/j-bob/acl2/j-bob-lang.lisp")
;; Load J-Bob, our little proof assistant:
(ld "~/Programming/j-bob/acl2/j-bob.lisp")
;; Load the transcript of all proofs in the book:
(ld "~/Programming/j-bob/acl2/little-prover.lisp")

* Basic terminology

** Axiom
   A basic assumption presumed to be true
** Theorem
   A theorem is a statement that can be demonstrated to be true
** Lemma
   A short theorem used in proving a larger theorem
** Proof
   A sequence of rewriting steps that ends in 't

   If we can rewrite a claim step by step to 't then the claim is a Theorem.

* ACL2 website

** Walking tour tips
Furthermore, to be a good user of ACL2 you do not have to understand how
the theorem prover works. You just have to understand how to interact with it

When ACL2 proves a lemma, it is converted into one or more rules and stored in a
database. The theorem prover is rule-driven. By proving lemmas you can configure
ACL2 to behave in certain ways when it is trying to prove formulas in a certain
problem domain. The expert user can make ACL2 do amazingly “smart” looking
things.

But it would be wrong to think that ACL2 knows the mathematical content of a
formula just because it has proved it. What ACL2 knows — all ACL2 knows — is
what is encoded in its rules.

The user interacts with the theorem prover by giving it definitions, theorems and advice. Most often the advice is about how to store each proved theorem as a rule. Sometimes the advice is about how to prove a specific theorem.

The database consists of all the rules ACL2 “knows.” It is possible to include in the database all of the rules in some certified file of other events. Such certified files are called books .

*** bad news
The bad news is that when you command ACL2 to prove a theorem you must give some thought to how that theorem is to be used as a rule!

For example, if after proving associativity-of-app as previously shown, you engaged in the mathematically trivial act of proving it again but with the equality reversed, you would have programmed ACL2’s rewriter to loop forever.
