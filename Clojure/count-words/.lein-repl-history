<<<<<<< HEAD
USER_HOME
$USER_HOME
=======
(play-file "~/Audio/februar.mp3")
(play-file "/home/jacek/Audio/februar.mp3")
(-main)
(.getParent)
(-> (ClassLoader/getSystemResource *file*) clojure.java.io/file .getParent)
(-> (java.io.File. ".") .getAbsolutePath)
(-main)
(-> (java.io.File. "") .getAbsolutePath)
(-> (java.io.File. "/") .getAbsolutePath)
(.getAbsolutePath)
(.getAbsolutePath java.io.file "/")
(System/getProperty "java.vm.version")
(-> Math/PI)
(-> "java.vm.version")
(. (. System (getProperties)) (get "os.name"))
(-> (System/getProperties) (.get "os.name"))
(dir)
(dir count-words)
(dir count-words.core)
(doc play-file)
(-> (System/getProperties) (.get "os.name"))
(-main)
(-> (System/getProperties) (.get "file.separator"))
(-> (System/getProperties) (.get "user_home"))
(-> (System/getProperties) (.get "user.home"))
(-main)
(require '[clj-yaml.core :as yaml])
(set! zzz nil)
(def zzz nil)
zzz
(set! zzz 1)
zzz
(let [xxx nil] (print xxx))
(let [xxx nil] (print xxx)(set! xxx 1)(print xxx))
(let [xxx nil] (print xxx)(swap xxx 1)(print xxx))
(let [xxx nil] (print xxx)(swap! xxx 1)(print xxx))
(let [xxx nil(atom nil)] (print xxx)(swap! xxx 1)(print xxx))
(let [xxx (atom nil)] (print xxx)(swap! xxx 1)(print xxx))
(let [xxx (atom nil)] (print xxx)(swa7)] (print xxx)(swap! xxx 1)(print xxx))
(let [xxx (atom 7)] (print xxx)(swap! xxx 1)(print xxx))
(printf "%d\n" 9)
(let [xxx (atom 7)] (printf "%d " xxx)(swap! xxx 1)(printf "%d " xxx))
(let [xxx (atom 7)] (printf "%s " xxx)(swap! xxx 1)(printf "%s " xxx))
>>>>>>> 4d57c4b0851fc8d184e656b8b85057c93bbad39b
